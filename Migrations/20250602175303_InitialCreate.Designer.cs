// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PollinatorBE.Data;

#nullable disable

namespace PollinatorBE.Migrations
{
    [DbContext(typeof(PollinatorBEDbContext))]
    [Migration("20250602175303_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("GardenPollinator", b =>
                {
                    b.Property<string>("GardensId")
                        .HasColumnType("text");

                    b.Property<string>("PollinatorsId")
                        .HasColumnType("text");

                    b.HasKey("GardensId", "PollinatorsId");

                    b.HasIndex("PollinatorsId");

                    b.ToTable("GardenPollinator");
                });

            modelBuilder.Entity("PlantPollinator", b =>
                {
                    b.Property<string>("PlantsId")
                        .HasColumnType("text");

                    b.Property<string>("PollinatorsId")
                        .HasColumnType("text");

                    b.HasKey("PlantsId", "PollinatorsId");

                    b.HasIndex("PollinatorsId");

                    b.ToTable("PlantPollinator");
                });

            modelBuilder.Entity("PollinatorBE.Models.Garden", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<bool>("Liked")
                        .HasColumnType("boolean");

                    b.Property<string>("Notes")
                        .HasColumnType("text");

                    b.Property<string>("Region")
                        .HasColumnType("text");

                    b.Property<string>("Season")
                        .HasColumnType("text");

                    b.Property<string>("Sun")
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserProfileUid")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserProfileUid");

                    b.ToTable("Gardens");

                    b.HasData(
                        new
                        {
                            Id = "garden001",
                            Image = "https://example.com/images/garden001.jpg",
                            Liked = true,
                            Notes = "Best spot for tomatoes and basil.",
                            Region = "Pacific Northwest",
                            Season = "Summer",
                            Sun = "Full Sun",
                            Type = "Vegetable Garden",
                            UserProfileUid = "user001"
                        },
                        new
                        {
                            Id = "garden002",
                            Image = "https://example.com/images/garden002.jpg",
                            Liked = true,
                            Notes = "Milkweed thriving. Monarchs spotted daily.",
                            Region = "Midwest",
                            Season = "Summer",
                            Sun = "Full Sun",
                            Type = "Pollinator Garden",
                            UserProfileUid = "user002"
                        },
                        new
                        {
                            Id = "garden003",
                            Image = "https://example.com/images/garden003.jpg",
                            Liked = false,
                            Notes = "Great bee and butterfly activity.",
                            Region = "Southeast",
                            Season = "Spring",
                            Sun = "Partial Sun",
                            Type = "Native Flower Bed",
                            UserProfileUid = "user003"
                        },
                        new
                        {
                            Id = "garden004",
                            Image = "https://example.com/images/garden004.jpg",
                            Liked = true,
                            Notes = "Oregano and black-eyed Susans doing well.",
                            Region = "Southwest",
                            Season = "Spring",
                            Sun = "Full Sun",
                            Type = "Mixed Herb and Flower Garden",
                            UserProfileUid = "user004"
                        });
                });

            modelBuilder.Entity("PollinatorBE.Models.GardenPlant", b =>
                {
                    b.Property<string>("GardenId")
                        .HasColumnType("text");

                    b.Property<string>("PlantId")
                        .HasColumnType("text");

                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("UserProfileUid")
                        .HasColumnType("text");

                    b.HasKey("GardenId", "PlantId");

                    b.HasIndex("PlantId");

                    b.HasIndex("UserProfileUid");

                    b.ToTable("GardenPlants");

                    b.HasData(
                        new
                        {
                            GardenId = "garden001",
                            PlantId = "plant001",
                            Id = "gp10",
                            UserProfileUid = "user001"
                        },
                        new
                        {
                            GardenId = "garden002",
                            PlantId = "plant_flp002",
                            Id = "gp11",
                            UserProfileUid = "user002"
                        },
                        new
                        {
                            GardenId = "garden003",
                            PlantId = "plant_flp003",
                            Id = "gp12",
                            UserProfileUid = "user003"
                        },
                        new
                        {
                            GardenId = "garden004",
                            PlantId = "plant_flp004",
                            Id = "gp13",
                            UserProfileUid = "user004"
                        },
                        new
                        {
                            GardenId = "garden001",
                            PlantId = "plant002",
                            Id = "gp14",
                            UserProfileUid = "user001"
                        });
                });

            modelBuilder.Entity("PollinatorBE.Models.Plant", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Liked")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Picture")
                        .HasColumnType("text");

                    b.Property<string>("Region")
                        .HasColumnType("text");

                    b.Property<string>("Season")
                        .HasColumnType("text");

                    b.Property<string>("Sun")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserProfileUid")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserProfileUid");

                    b.ToTable("Plants");

                    b.HasData(
                        new
                        {
                            Id = "plant001",
                            Description = "Juicy red fruit great for salads.",
                            Liked = true,
                            Name = "Tomato",
                            Picture = "https://example.com/images/tomato.jpg",
                            Region = "Pacific Northwest",
                            Season = "Summer",
                            Sun = "Full Sun",
                            Type = "Vegetable",
                            UserProfileUid = "user001"
                        },
                        new
                        {
                            Id = "plant002",
                            Description = "Fragrant herb often used in Italian dishes.",
                            Liked = false,
                            Name = "Basil",
                            Picture = "https://example.com/images/basil.jpg",
                            Region = "Pacific Northwest",
                            Season = "Summer",
                            Sun = "Partial Sun",
                            Type = "Herb",
                            UserProfileUid = "user001"
                        },
                        new
                        {
                            Id = "plant_flp001",
                            Description = "Tubular red and pink blooms that attract bees and hummingbirds.",
                            Liked = true,
                            Name = "Bee Balm",
                            Picture = "https://example.com/images/beebalm.jpg",
                            Region = "Northeast",
                            Season = "Summer",
                            Sun = "Full Sun",
                            Type = "Flower",
                            UserProfileUid = "user001"
                        },
                        new
                        {
                            Id = "plant_flp002",
                            Description = "Essential host plant for monarch butterflies.",
                            Liked = true,
                            Name = "Milkweed",
                            Picture = "https://example.com/images/milkweed.jpg",
                            Region = "Midwest",
                            Season = "Summer",
                            Sun = "Full Sun",
                            Type = "Flower",
                            UserProfileUid = "user002"
                        },
                        new
                        {
                            Id = "plant_flp003",
                            Description = "Purple-petaled flower rich in nectar for bees and butterflies.",
                            Liked = true,
                            Name = "Coneflower",
                            Picture = "https://example.com/images/coneflower.jpg",
                            Region = "Southeast",
                            Season = "Summer",
                            Sun = "Full Sun",
                            Type = "Flower",
                            UserProfileUid = "user003"
                        },
                        new
                        {
                            Id = "plant_flp004",
                            Description = "Yellow-petaled wildflower that supports bees and hoverflies.",
                            Liked = false,
                            Name = "Black-eyed Susan",
                            Picture = "https://example.com/images/blackeyedsusan.jpg",
                            Region = "Southwest",
                            Season = "Summer",
                            Sun = "Full Sun",
                            Type = "Flower",
                            UserProfileUid = "user004"
                        });
                });

            modelBuilder.Entity("PollinatorBE.Models.Pollinator", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<bool>("Liked")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Region")
                        .HasColumnType("text");

                    b.Property<string>("Season")
                        .HasColumnType("text");

                    b.Property<string>("UserProfileUid")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserProfileUid");

                    b.ToTable("Pollinators");

                    b.HasData(
                        new
                        {
                            Id = "poll001",
                            Description = "Essential pollinator for fruits, vegetables, and herbs.",
                            Image = "https://example.com/images/honeybee.jpg",
                            Liked = true,
                            Name = "Honey Bee",
                            Region = "Pacific Northwest",
                            Season = "Spring to Fall",
                            UserProfileUid = "user001"
                        },
                        new
                        {
                            Id = "poll002",
                            Description = "Fuzzy, robust bee that pollinates tomatoes and native flowers.",
                            Image = "https://example.com/images/bumblebee.jpg",
                            Liked = false,
                            Name = "Bumblebee",
                            Region = "Pacific Northwest",
                            Season = "Spring to Fall",
                            UserProfileUid = "user001"
                        },
                        new
                        {
                            Id = "poll003",
                            Description = "Iconic butterfly species reliant on milkweed for reproduction.",
                            Image = "https://example.com/images/monarch.jpg",
                            Liked = true,
                            Name = "Monarch Butterfly",
                            Region = "Midwest",
                            Season = "Summer",
                            UserProfileUid = "user002"
                        },
                        new
                        {
                            Id = "poll004",
                            Description = "Colorful butterfly that loves coneflowers and thistles.",
                            Image = "https://example.com/images/paintedlady.jpg",
                            Liked = true,
                            Name = "Painted Lady Butterfly",
                            Region = "Southeast",
                            Season = "Summer",
                            UserProfileUid = "user003"
                        });
                });

            modelBuilder.Entity("PollinatorBE.Models.UserProfile", b =>
                {
                    b.Property<string>("Uid")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<string>("Region")
                        .HasColumnType("text");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Uid");

                    b.ToTable("UserProfiles");

                    b.HasData(
                        new
                        {
                            Uid = "user001",
                            Email = "garden.guru@example.com",
                            Image = "https://example.com/images/user12345.jpg",
                            Region = "Pacific Northwest",
                            UserName = "GardenGuru"
                        },
                        new
                        {
                            Uid = "user002",
                            Email = "greenthumb01@example.com",
                            Image = "https://example.com/images/user001.jpg",
                            Region = "Pacific Northwest",
                            UserName = "GreenThumb01"
                        },
                        new
                        {
                            Uid = "user003",
                            Email = "urban.gardener@example.com",
                            Image = "https://example.com/images/user002.jpg",
                            Region = "Midwest",
                            UserName = "UrbanGardener"
                        },
                        new
                        {
                            Uid = "user004",
                            Email = "naturenerd@example.com",
                            Image = "https://example.com/images/user003.jpg",
                            Region = "Southeast",
                            UserName = "NatureNerd"
                        },
                        new
                        {
                            Uid = "user005",
                            Email = "florafan@example.com",
                            Image = "https://example.com/images/user004.jpg",
                            Region = "Southwest",
                            UserName = "FloraFan"
                        });
                });

            modelBuilder.Entity("GardenPollinator", b =>
                {
                    b.HasOne("PollinatorBE.Models.Garden", null)
                        .WithMany()
                        .HasForeignKey("GardensId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PollinatorBE.Models.Pollinator", null)
                        .WithMany()
                        .HasForeignKey("PollinatorsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PlantPollinator", b =>
                {
                    b.HasOne("PollinatorBE.Models.Plant", null)
                        .WithMany()
                        .HasForeignKey("PlantsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PollinatorBE.Models.Pollinator", null)
                        .WithMany()
                        .HasForeignKey("PollinatorsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PollinatorBE.Models.Garden", b =>
                {
                    b.HasOne("PollinatorBE.Models.UserProfile", "UserProfile")
                        .WithMany("Gardens")
                        .HasForeignKey("UserProfileUid");

                    b.Navigation("UserProfile");
                });

            modelBuilder.Entity("PollinatorBE.Models.GardenPlant", b =>
                {
                    b.HasOne("PollinatorBE.Models.Garden", "Garden")
                        .WithMany("GardenPlants")
                        .HasForeignKey("GardenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PollinatorBE.Models.Plant", "Plant")
                        .WithMany("GardenPlants")
                        .HasForeignKey("PlantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PollinatorBE.Models.UserProfile", "UserProfile")
                        .WithMany()
                        .HasForeignKey("UserProfileUid");

                    b.Navigation("Garden");

                    b.Navigation("Plant");

                    b.Navigation("UserProfile");
                });

            modelBuilder.Entity("PollinatorBE.Models.Plant", b =>
                {
                    b.HasOne("PollinatorBE.Models.UserProfile", "UserProfile")
                        .WithMany()
                        .HasForeignKey("UserProfileUid");

                    b.Navigation("UserProfile");
                });

            modelBuilder.Entity("PollinatorBE.Models.Pollinator", b =>
                {
                    b.HasOne("PollinatorBE.Models.UserProfile", "UserProfile")
                        .WithMany()
                        .HasForeignKey("UserProfileUid");

                    b.Navigation("UserProfile");
                });

            modelBuilder.Entity("PollinatorBE.Models.Garden", b =>
                {
                    b.Navigation("GardenPlants");
                });

            modelBuilder.Entity("PollinatorBE.Models.Plant", b =>
                {
                    b.Navigation("GardenPlants");
                });

            modelBuilder.Entity("PollinatorBE.Models.UserProfile", b =>
                {
                    b.Navigation("Gardens");
                });
#pragma warning restore 612, 618
        }
    }
}
